#
# Create nginx user, directories and install nginx
#

---
- name: create nginx group
  group:
    name: "{{ nginx_group }}"
    system: yes
    gid: "31"

- name: create nginx user
  user:
    name: "{{ nginx_user }}"
    groups: "{{ nginx_group }}"
    uid: "31"
    system: yes
    shell: "/sbin/nologin"
    create_home: no

- name: create necessary directory for nginx
  file:
    path: "{{ item }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    recurse: yes
    state: directory
  loop:
    - "{{ nginx_path_data }}"
    - "{{ nginx_path_log }}"
  changed_when: False

- name: create default directories config for nginx
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
  loop: "{{ nginx_default_configs }}"

- name: add nginx repository
  yum_repository:
    name: nginx
    description: nginx
    file: nginx
    gpgcheck: "0"
    baseurl: "{{ nginx_baseurl_centos }}"

- name: install nginx with lastest version
  yum:
    name: nginx
    state: present
  when: nginx_version == "lastest"

- name: install nginx with specific version
  yum:
    name: nginx-{{ nginx_version }}-1.el{{ ansible_distribution_major_version }}.ngx
    state: present
  when: nginx_version != "lastest"

- name: stat random nginx default config
  stat:
    path: "/etc/nginx/fastcgi.conf.default"
  register: stat_nginx_config

- name: move default configs to default.d folder
  shell: "mv *.default default.d"
  args:
    chdir: "/etc/nginx"
  when: stat_nginx_config.stat.exists

- name: generate configs for nginx
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "nginx.conf.j2", dest: "/etc/nginx/nginx.conf" }
    - { src: "nginx.service.j2", dest: "/etc/systemd/system/nginx.service" }
    - { src: "nginx.j2", dest: "/etc/logrotate.d/nginx" }
  notify: restart nginx service